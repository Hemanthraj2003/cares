// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: cluster.proto

package cluster

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NodeInfo contains information about a node joining the cluster
type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Hostname      string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_cluster_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{0}
}

func (x *NodeInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NodeInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *NodeInfo) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// NodeMetrics contains real-time resource usage data from a worker node
type NodeMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CpuUsage      float64                `protobuf:"fixed64,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage   float64                `protobuf:"fixed64,3,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeMetrics) Reset() {
	*x = NodeMetrics{}
	mi := &file_cluster_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeMetrics) ProtoMessage() {}

func (x *NodeMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeMetrics.ProtoReflect.Descriptor instead.
func (*NodeMetrics) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{1}
}

func (x *NodeMetrics) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeMetrics) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *NodeMetrics) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *NodeMetrics) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NodeMetrics) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Acknowledgement confirms successful operations
type Acknowledgement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ClusterId     string                 `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Acknowledgement) Reset() {
	*x = Acknowledgement{}
	mi := &file_cluster_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acknowledgement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acknowledgement) ProtoMessage() {}

func (x *Acknowledgement) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acknowledgement.ProtoReflect.Descriptor instead.
func (*Acknowledgement) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{2}
}

func (x *Acknowledgement) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Acknowledgement) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Acknowledgement) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

// OrchestratorCommand represents commands sent from orchestrator to workers
type OrchestratorCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandType   string                 `protobuf:"bytes,1,opt,name=command_type,json=commandType,proto3" json:"command_type,omitempty"`
	Payload       string                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrchestratorCommand) Reset() {
	*x = OrchestratorCommand{}
	mi := &file_cluster_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrchestratorCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrchestratorCommand) ProtoMessage() {}

func (x *OrchestratorCommand) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrchestratorCommand.ProtoReflect.Descriptor instead.
func (*OrchestratorCommand) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{3}
}

func (x *OrchestratorCommand) GetCommandType() string {
	if x != nil {
		return x.CommandType
	}
	return ""
}

func (x *OrchestratorCommand) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *OrchestratorCommand) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// FunctionRequest contains the Docker image to execute on a worker
type FunctionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DockerImage   string                 `protobuf:"bytes,1,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
	FunctionName  string                 `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"` // For logging purposes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionRequest) Reset() {
	*x = FunctionRequest{}
	mi := &file_cluster_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionRequest) ProtoMessage() {}

func (x *FunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionRequest.ProtoReflect.Descriptor instead.
func (*FunctionRequest) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{4}
}

func (x *FunctionRequest) GetDockerImage() string {
	if x != nil {
		return x.DockerImage
	}
	return ""
}

func (x *FunctionRequest) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

// FunctionResult contains the result of function execution
type FunctionResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        string                 `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionResult) Reset() {
	*x = FunctionResult{}
	mi := &file_cluster_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionResult) ProtoMessage() {}

func (x *FunctionResult) ProtoReflect() protoreflect.Message {
	mi := &file_cluster_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionResult.ProtoReflect.Descriptor instead.
func (*FunctionResult) Descriptor() ([]byte, []int) {
	return file_cluster_proto_rawDescGZIP(), []int{5}
}

func (x *FunctionResult) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *FunctionResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FunctionResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_cluster_proto protoreflect.FileDescriptor

const file_cluster_proto_rawDesc = "" +
	"\n" +
	"\rcluster.proto\x12\acluster\"w\n" +
	"\bNodeInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x1a\n" +
	"\bhostname\x18\x03 \x01(\tR\bhostname\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"\x9c\x01\n" +
	"\vNodeMetrics\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x03 \x01(\x01R\vmemoryUsage\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\"d\n" +
	"\x0fAcknowledgement\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\"p\n" +
	"\x13OrchestratorCommand\x12!\n" +
	"\fcommand_type\x18\x01 \x01(\tR\vcommandType\x12\x18\n" +
	"\apayload\x18\x02 \x01(\tR\apayload\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"Y\n" +
	"\x0fFunctionRequest\x12!\n" +
	"\fdocker_image\x18\x01 \x01(\tR\vdockerImage\x12#\n" +
	"\rfunction_name\x18\x02 \x01(\tR\ffunctionName\"X\n" +
	"\x0eFunctionResult\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error2\xd7\x01\n" +
	"\x0eClusterService\x12:\n" +
	"\vJoinCluster\x12\x11.cluster.NodeInfo\x1a\x18.cluster.Acknowledgement\x12C\n" +
	"\tHeartbeat\x12\x14.cluster.NodeMetrics\x1a\x1c.cluster.OrchestratorCommand(\x010\x01\x12D\n" +
	"\x0fExecuteFunction\x12\x18.cluster.FunctionRequest\x1a\x17.cluster.FunctionResultB\x18Z\x16cares/internal/clusterb\x06proto3"

var (
	file_cluster_proto_rawDescOnce sync.Once
	file_cluster_proto_rawDescData []byte
)

func file_cluster_proto_rawDescGZIP() []byte {
	file_cluster_proto_rawDescOnce.Do(func() {
		file_cluster_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cluster_proto_rawDesc), len(file_cluster_proto_rawDesc)))
	})
	return file_cluster_proto_rawDescData
}

var file_cluster_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_cluster_proto_goTypes = []any{
	(*NodeInfo)(nil),            // 0: cluster.NodeInfo
	(*NodeMetrics)(nil),         // 1: cluster.NodeMetrics
	(*Acknowledgement)(nil),     // 2: cluster.Acknowledgement
	(*OrchestratorCommand)(nil), // 3: cluster.OrchestratorCommand
	(*FunctionRequest)(nil),     // 4: cluster.FunctionRequest
	(*FunctionResult)(nil),      // 5: cluster.FunctionResult
}
var file_cluster_proto_depIdxs = []int32{
	0, // 0: cluster.ClusterService.JoinCluster:input_type -> cluster.NodeInfo
	1, // 1: cluster.ClusterService.Heartbeat:input_type -> cluster.NodeMetrics
	4, // 2: cluster.ClusterService.ExecuteFunction:input_type -> cluster.FunctionRequest
	2, // 3: cluster.ClusterService.JoinCluster:output_type -> cluster.Acknowledgement
	3, // 4: cluster.ClusterService.Heartbeat:output_type -> cluster.OrchestratorCommand
	5, // 5: cluster.ClusterService.ExecuteFunction:output_type -> cluster.FunctionResult
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cluster_proto_init() }
func file_cluster_proto_init() {
	if File_cluster_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cluster_proto_rawDesc), len(file_cluster_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cluster_proto_goTypes,
		DependencyIndexes: file_cluster_proto_depIdxs,
		MessageInfos:      file_cluster_proto_msgTypes,
	}.Build()
	File_cluster_proto = out.File
	file_cluster_proto_goTypes = nil
	file_cluster_proto_depIdxs = nil
}
